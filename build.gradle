buildscript {
    ext {
        springBootVersion = '1.3.6.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:0.13")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'com.moowork.node'

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

bootRun {
    addResources = true
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
    runtime("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

project.afterEvaluate {
    tasks.npm_install.outputs.dir(file('node_modules'))
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

task buildJavascriptProduction(type: NodeTask) {
    script = file('node_modules/gulp/bin/gulp.js')
    args = ['production']
    execOverrides {
        it.workingDir = projectDir
    }
    inputs.dir('src/main/javascript')
    inputs.file('gulpfile.js')
    outputs.dir('src/main/resources/static')
}

task buildJavascriptDebug(type: NodeTask) {
    script = file('node_modules/gulp/bin/gulp.js')
    args = ['default']
    execOverrides {
        it.workingDir = projectDir
    }
    inputs.dir('src/main/javascript')
    inputs.file('gulpfile.js')
    outputs.dir('src/main/resources/static')
}

processResources.dependsOn buildJavascriptProduction

buildJavascriptProduction.dependsOn(npm_install)
buildJavascriptDebug.dependsOn(npm_install)
